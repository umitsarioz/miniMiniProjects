/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cekilisyap;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.util.ArrayList;
import java.util.Random;
import java.util.Set;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author zoirasu
 */
public class cekilisEkrani extends javax.swing.JFrame {

    private String dosya_yolu = ""; // Katilimciların dosyasının alındığ dosya yolu.
    DefaultListModel model_Katilanlar = new DefaultListModel(); // Listeler için model oluşturuldu.
    DefaultListModel model_Kazananlar = new DefaultListModel(); // Listeler için model oluşturuldu.
    private int kazanacak_kisi_sayisi = 0; // Kazanacak kişi sayısını başlangıç değeri atandı.

    ArrayList<String> katilimclar_listesi = new ArrayList<>(); // Katılımcıların tutulacağı arraylist
    Set<String> kazananlar_listesi = new TreeSet<>(); // Kazananların tutulacağı set. Aynı isimler kazanmasın diye set'de tutuluyor.

    public cekilisEkrani() {
        initComponents();
        list_katilimcilar.setModel(model_Katilanlar); // Katilimcilar listesi componentinin modellenmesi.
        list_kazananlar.setModel(model_Kazananlar);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cekilisPaneli = new javax.swing.JPanel();
        btn_DosyaSec = new javax.swing.JButton();
        txt_dosyaYolu = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_katilimcilar = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        list_kazananlar = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        txt_kazananKisiSayisi = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btn_cekilisYap = new javax.swing.JButton();
        btn_Reset = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_cekilisHelp = new javax.swing.JMenu();
        cekilisNasiYapilir = new javax.swing.JMenuItem();
        cekilis_tekrarla = new javax.swing.JMenuItem();
        cikis = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hızlı Çekiliş");
        setBounds(new java.awt.Rectangle(450, 450, 0, 0));
        setResizable(false);

        cekilisPaneli.setBackground(new java.awt.Color(173, 209, 234));

        btn_DosyaSec.setText("Dosya Seç..");
        btn_DosyaSec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DosyaSecActionPerformed(evt);
            }
        });

        txt_dosyaYolu.setEditable(false);

        jScrollPane1.setViewportView(list_katilimcilar);

        jScrollPane2.setViewportView(list_kazananlar);

        jLabel1.setBackground(new java.awt.Color(217, 233, 248));
        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("Katılımcılar");

        jLabel2.setBackground(new java.awt.Color(198, 225, 251));
        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel2.setText("Kazanıcak Kişi Sayısı :");

        jLabel3.setBackground(new java.awt.Color(187, 217, 247));
        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel3.setText("Kazananlar ");

        btn_cekilisYap.setText("Çekiliş Yap");
        btn_cekilisYap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cekilisYapActionPerformed(evt);
            }
        });

        btn_Reset.setText("Reset");
        btn_Reset.setEnabled(false);
        btn_Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cekilisPaneliLayout = new javax.swing.GroupLayout(cekilisPaneli);
        cekilisPaneli.setLayout(cekilisPaneliLayout);
        cekilisPaneliLayout.setHorizontalGroup(
            cekilisPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cekilisPaneliLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(cekilisPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(cekilisPaneliLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, cekilisPaneliLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(cekilisPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cekilisPaneliLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(cekilisPaneliLayout.createSequentialGroup()
                                .addGroup(cekilisPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(cekilisPaneliLayout.createSequentialGroup()
                                        .addComponent(btn_DosyaSec)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_dosyaYolu, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(cekilisPaneliLayout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_kazananKisiSayisi, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(36, 36, 36)
                                .addGroup(cekilisPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_Reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_cekilisYap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(34, 34, 34))
        );
        cekilisPaneliLayout.setVerticalGroup(
            cekilisPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cekilisPaneliLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cekilisPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_dosyaYolu, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(btn_cekilisYap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_DosyaSec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cekilisPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cekilisPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txt_kazananKisiSayisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cekilisPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cekilisPaneliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        menu_cekilisHelp.setText("Yardım");

        cekilisNasiYapilir.setText("Çekiliş nasıl yapılır?");
        cekilisNasiYapilir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cekilisNasiYapilirActionPerformed(evt);
            }
        });
        menu_cekilisHelp.add(cekilisNasiYapilir);

        cekilis_tekrarla.setText("Çekilişi tekrarla");
        cekilis_tekrarla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cekilis_tekrarlaActionPerformed(evt);
            }
        });
        menu_cekilisHelp.add(cekilis_tekrarla);

        cikis.setText("Yanlış karakter hatasını nasıl çözerim?");
        cikis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cikisActionPerformed(evt);
            }
        });
        menu_cekilisHelp.add(cikis);

        jMenuBar1.add(menu_cekilisHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cekilisPaneli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cekilisPaneli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void cekilisYap() {
          temizleKazananlari(); // Eğer liste doluysa temizle ve sonra devam et.

        if (dosya_yolu.equals("")) {
            JOptionPane.showMessageDialog(this, "Lütfen bir dosya seçiniz!","HATA",1);
        } else {
            if (kazanacakKisiSayisi() == 0) {
                JOptionPane.showMessageDialog(this, "Kazanacak kişi sayısını giriniz.","HATA",1);
            } else {
                kazananlariEkle();
                kazananlariGoster();
                //renkDegistir(Color.RED,Color.GREEN);
                btn_Reset.setEnabled(true);
            }
        }
    }

    private int kazanacakKisiSayisi() { // Kazacak kisi sayisi *0 dan buyukse true dondursun degıle false dondursun
        // alt tarafta fonksynu calıstırıp mesaj gösterecek.
        try {
            this.kazanacak_kisi_sayisi = Integer.valueOf(txt_kazananKisiSayisi.getText());
            if (kazanacak_kisi_sayisi > 0) {
                return kazanacak_kisi_sayisi;
            } else {
                return 0;
            }
        } catch (Exception e) {
            System.out.println("exception tespit edildi: " + e);
        }
        return 0;

    }

    
        
        

    private void katilimcilariEkle() {
        
       
        try ( BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(dosya_yolu),"UTF-8"))) {
           
            String kisi;
            while ((kisi = reader.readLine()) != null) {
                katilimclar_listesi.add(kisi);
            }

        } catch (IOException e) {
            System.out.println("io exception:" + e);
        }

    }

    private void kazananlariEkle() {

        while (kazananlar_listesi.size() != kazanacak_kisi_sayisi) {
            Random random = new Random(); // Rastgele indeks oluşturur böylece  random kazanananlar olacaktır.

            int kazananIndex = random.nextInt(katilimclar_listesi.size());
            kazananlar_listesi.add(katilimclar_listesi.get(kazananIndex));
        }
    }

    private void katilimcilariGoster() {
        for (String katilan : katilimclar_listesi) {
            model_Katilanlar.addElement(katilan);
        }
    }

    public void kazananlariGoster()  { // Kazananlari ekleyen fonksiyon
        for (String kazanan : kazananlar_listesi) {
        
            model_Kazananlar.addElement(kazanan);  // Elemanları ekle.
        }
    }

    private void temizleKazananlari() {
        if (kazananlar_listesi.size() > 0) {
            kazananlar_listesi.clear();
        }
        model_Kazananlar.clear();
    }
    
    /*private void alkisSesi(){
        String ses_dosyasi = "/home/zoirasu/NetBeansProjects/CekilisUygulamasi/src/alkis.wav";
        try{
        File file = new File(ses_dosyasi);
        Clip clip = AudioSystem.getClip();
        clip.open(AudioSystem.getAudioInputStream(file));
        clip.start();
        }catch(Exception e)
        {
            System.out.println("Ses dosyasında hata var:"+e);
        }
    }
    private void renkDegistir(Color Katilan,Color Kazanan){
        list_katilimcilar.setBackground(Katilan);
        list_kazananlar.setBackground(Kazanan);
        
    }*/
    
    

    private void btn_DosyaSecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DosyaSecActionPerformed
        txt_dosyaYolu.setText("");
        String dosya_adi="";
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text"); // Sadece txt file'ları göster
        fileChooser.setFileFilter(filter);
        int secilen = fileChooser.showOpenDialog(this); // Dosya seç
       

        if (secilen == JFileChooser.APPROVE_OPTION) {
            this.dosya_yolu = fileChooser.getSelectedFile().getPath();
            dosya_adi = fileChooser.getSelectedFile().getName(); // Sadece dosya ismini al .
        }
        katilimcilariEkle();
        katilimcilariGoster();
        txt_dosyaYolu.setText(dosya_adi);
    }//GEN-LAST:event_btn_DosyaSecActionPerformed

    private void btn_cekilisYapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cekilisYapActionPerformed

        temizleKazananlari(); // Eğer liste doluysa temizle ve sonra devam et.

        if (dosya_yolu.equals("")) {
            JOptionPane.showMessageDialog(this, "Lütfen bir dosya seçiniz!","HATA",1);
        } else {
            if (kazanacakKisiSayisi() == 0) {
                JOptionPane.showMessageDialog(this, "Kazanacak kişi sayısını giriniz.","HATA",1);
            } else {
                kazananlariEkle();
                kazananlariGoster();
                // renkDegistir(Color.RED,Color.GREEN);
                // alkisSesi();
                btn_Reset.setEnabled(true);
            }
        }
    }//GEN-LAST:event_btn_cekilisYapActionPerformed

    private void btn_ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ResetActionPerformed
      
        txt_dosyaYolu.setText("");
        dosya_yolu =  "";
        txt_kazananKisiSayisi.setText("");
        model_Katilanlar.clear();
        model_Kazananlar.clear();
        //renkDegistir(Color.WHITE,Color.WHITE);
        btn_Reset.setEnabled(false);
    }//GEN-LAST:event_btn_ResetActionPerformed

    private void cekilis_tekrarlaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cekilis_tekrarlaActionPerformed
        cekilisYap();
    }//GEN-LAST:event_cekilis_tekrarlaActionPerformed

    private void cekilisNasiYapilirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cekilisNasiYapilirActionPerformed
        String message = "1-) Çekiliş için kişilerin olduğu dosyayı seçiniz.\n"
                +"2-) Kaç kişinin çekilişi kazanacağını yazınız.\n"
                +"3-) Çekiliş Yap butonuna tıklayınız.\n"
                +"4-) Çekilişi Tekrarlamak için 'Çekilişi Tekrarla' seçeneğinden yardım alınız.\n"
                +"5-) Farklı kişilerle çekiliş yapmak için önce Reset tuşuna basınız.\n"
                +"6-) İlk 3 adımı tekrarlayınız.\n";
        JOptionPane.showMessageDialog(this, message,"Çekiliş Nasıl Yapılır?",1);
        
        
    }//GEN-LAST:event_cekilisNasiYapilirActionPerformed

    private void cikisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cikisActionPerformed
        JOptionPane.showMessageDialog(this, "Eklediğiniz dosyanın utf-8 ile kodlandığından emin olunuz.","Tanımlanamayan Karakter Hatası",1);
    }//GEN-LAST:event_cikisActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cekilisEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cekilisEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cekilisEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cekilisEkrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cekilisEkrani().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_DosyaSec;
    private javax.swing.JButton btn_Reset;
    private javax.swing.JButton btn_cekilisYap;
    private javax.swing.JMenuItem cekilisNasiYapilir;
    private javax.swing.JPanel cekilisPaneli;
    private javax.swing.JMenuItem cekilis_tekrarla;
    private javax.swing.JMenuItem cikis;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> list_katilimcilar;
    private javax.swing.JList<String> list_kazananlar;
    private javax.swing.JMenu menu_cekilisHelp;
    private javax.swing.JTextField txt_dosyaYolu;
    private javax.swing.JTextField txt_kazananKisiSayisi;
    // End of variables declaration//GEN-END:variables
}
